'use strict';

/**
 * Creates a generator.
 * @param {number} start The first number in the generated sequence.
 * @param {number} end  The last number in the generated sequence.
 * @param {number} step The interval between numbers in the generated sequence.
 */
function* sequence(start = 0, end = Infinity, step = 1) {
  for (let current = start; current < end; current = current + step) {
    yield current;
  }
}

/**
 * Creates a generator using an iterator over the numbers 1..5.
 */
function* genUsingIterator() {
  yield* [1, 2, 3, 4, 5];
}

// printGeneratedVals(sequence());
printGeneratedVals(sequence(2, 10, 3));
console.log();
printGeneratedVals(genUsingIterator());

/**
 * Prints the values generated by the specified generator.
 *
 * @param {Generator} theGen Generates the values that are printed.
 */
function printGeneratedVals(theGen) {
  let current = theGen.next();
  while (!current.done) {
    console.log(current.value);
    current = theGen.next();
  }
}
